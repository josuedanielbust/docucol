apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-postgres
  namespace: docucol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-postgres
  template:
    metadata:
      labels:
        app: users-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: docucol-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docucol-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: docucol-secrets
              key: POSTGRES_DB
        # Add PostgreSQL configuration parameters
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_INITDB_ARGS
          value: "--data-checksums --encoding=UTF8 --locale=en_US.utf8"
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "md5"
        ports:
        - name: postgres
          containerPort: 5432
        volumeMounts:
        - name: user-postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-d", "$(POSTGRES_DB)"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-d", "$(POSTGRES_DB)"]
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 30
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "200m"
            memory: "512Mi"
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
      volumes:
      - name: user-postgres-data
        persistentVolumeClaim:
          claimName: user-postgres-pvc
      - name: postgres-init
        configMap:
          name: postgres-users-init
          defaultMode: 0755
---
apiVersion: v1
kind: Service
metadata:
  name: users-postgres
  namespace: docucol
spec:
  selector:
    app: users-postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-api
  namespace: docucol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-api
  template:
    metadata:
      labels:
        app: users-api
    spec:
      containers:
      - name: users-api
        image: valeriag5/docucol-users-api
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: docucol-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: docucol-config
              key: PORT
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@users-postgres:5432/$(POSTGRES_DB)?schema=public
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: docucol-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: docucol-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: docucol-secrets
              key: POSTGRES_DB
        - name: APP_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: docucol-config
              key: APP_DOMAIN
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 10
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: users-api
  namespace: docucol
spec:
  selector:
    app: users-api
  ports:
  - port: 3000
    targetPort: 3000
